<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
					   	   http://www.springframework.org/schema/beans/spring-beans.xsd  
				           http://www.springframework.org/schema/context  
				           http://www.springframework.org/schema/context/spring-context.xsd 
				           http://www.springframework.org/schema/tx   
				           http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 1和2是最基本的命名空间定义，3是启动自动扫描或者注解装配时的命名空间， 4是启动声明事务时的命名空间 5是与上述命名空间定义相配套的schema定义文件的装载路径 -->
	<!-- 配置自动扫描 -->
	<context:annotation-config />
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.shop.dao"></property>
	</bean>
	<!-- 加载properties文件 -->
	<bean id="daoResources" class="java.util.ArrayList">
		<constructor-arg>
			<list>
				<value>classpath:conf/db.properties</value>
			</list>
		</constructor-arg>
	</bean>
	<!-- 用Spring加载和管理属性配置文件  -->
	<bean id="daoPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations" ref="daoResources" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="wall,stat,slf4j" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="typeAliasesPackage" value="com.shop.model" />
		<property name="mapperLocations" value="classpath*:sqlmapper/**/*.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	 <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>